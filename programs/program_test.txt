program example
    local x
    local y, z
    local chucktest'a
    local under_score
begin
    read  x;
    write x;

    (* comments *)
    write 1;(* comment *)
    write 2; (* comment *)
    (* comment *)write 3;
    (* comment *) write 4;
    (* comment *)write 5;(* comment *)
    (* comment *) write 6;(* comment *)
    (* comment *)write 7; (* comment *)
    (* comment *) write 8; (* comment *)

    x := 10 + 10;
    x := 10 * 10;
    x := 10 div 10;
    x := 10 mod 10;

    x := 2 + 3 * 4;
    if x <> 14 then write -1 fi;

    x := (2 + 3) * 4;
    if x <> 20 then write -2 fi;

    x := ((((2 + 3)))) * 4;
    if x <> 20 then write -3 fi;

    x := (12 * 6);                            if x <>  72 then write -4 fi;
    x := (12 * 6 + 3);                        if x <>  75 then write -5 fi;
    x := (12 * 6 + 3) * (2 + 1);              if x <> 225 then write -6 fi;
    x := (12 * 6 + 3) * (2 + 1) mod 10;       if x <>   5 then write -7 fi;
    x := (12 * 6 + 3) * (2 + 1) mod 10 div 2; if x <>   2 then write -8 fi;

    if  1 <  0 then write  -9 fi;
    if  1 <= 0 then write -10 fi;
    if  1 <> 0 then write   9 fi;
    if  1 =  0 then write -11 fi;
    if  1 >  0 then write  10 fi;
    if  1 >= 0 then write  11 fi;
    if  1 <  1 then write -12 fi;
    if  1 <= 1 then write  12 fi;
    if  1 <> 1 then write -13 fi;
    if  1 =  1 then write  13 fi;
    if  1 >  1 then write -14 fi;
    if  1 >= 1 then write  14 fi;
    if -1 <  0 then write  15 fi;
    if -1 <= 0 then write  16 fi;
    if -1 <> 0 then write  17 fi;
    if -1 =  0 then write -15 fi;
    if -1 >  0 then write -16 fi;
    if -1 >= 0 then write -17 fi;

    if 1 = 0 or  1 = 1 then write  18 fi;
    if 1 = 1 or  1 = 0 then write  19 fi;
    if 1 = 0 and 1 = 1 then write -18 fi;
    if 1 = 1 and 1 = 0 then write -19 fi;

    x := 1;
    y := 1;

    if x <> y then
        write -20
    else
        write 20
    fi;

    x := -32500;
    y :=  32500;

    if x < y then
        write 21
    else
        write -21
    fi;

    x :=  32500;
    y := -32500;

    if x > y then
        write 22
    else
        write -22
    fi;

    if (9 - 1) div 2 = 4 then
        write 23
    else
        write -23
    fi;

    x := 32767;
    y := x;

    if y = x then
      write 24
    else
      write -24
    fi;

    if y > x or y < x then
      write -25
    else
      write 25
    fi;


(***bool expression test***)

    x := 3;
    y := 5;

    if x < y and not y <> 5 and not (x >= 4 or y <= -3202) then
      write 26
    else
      write -26
    fi;

    if x - y = 0 or x = 5 and y = 5 then
      write -27
    else
      if x = 3 and y = 5 and not x = 5 and not x = y and not y = x and x <> y and x = x then
        write 27
      else
        write -27
      fi
    fi;

    if (((x = 3 and y = 5) and y > x) and x - x - x + x = 0) then
      if (((x - y <> y - x) and y - y = x - x)) then
        write 28
      else
        write -28
      fi
    else
      if (y = x) then
        write -28
      else
        write -28
      fi
    fi;

    (*    loop test   *)

    x := 100;
    y := 30;

    while (x > 0) do
      if 32767 <= -1 then
        write -29
      fi;
      if not x <= 100 then
        write -29
      fi;
      while y > 0 and y <> 30 or y = 29 do
          write -29;
          y := -100
      done;
      x := x - 1;
      if x = 0 then
        write 29
      fi
    done;

    if x = 0 then
      write 30
    else
      write -30
    fi;

    x := 100;
    under_score := 0;

    while x <> 0 do 
        y := 100;
        while y > 0 do
            z := 100;
            while z <> 50 do
              z := z - 10;
              under_score := under_score + 1
            done;
            y := y - 2;
            under_score := under_score + 1
        done;
        x := x - 1;
        under_score := under_score + 1
    done;

(** loop counter, result = 100 + 100 * 50 + 100 * 50 * 5 **)

    if under_score <> 30100 then
      write -31
    else
      write 31
    fi;

    if not 0 < -32768 and -32768 <= 0 then
        write 32
    else
        write -32
    fi
end